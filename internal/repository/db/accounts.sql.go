// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: accounts.sql

package db

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts (email) VALUES ($1) RETURNING id
`

func (q *Queries) CreateAccount(ctx context.Context, email string) (int32, error) {
	row := q.db.QueryRow(ctx, createAccount, email)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const getAccountByEmail = `-- name: GetAccountByEmail :one
SELECT id, email FROM accounts WHERE email = $1
`

func (q *Queries) GetAccountByEmail(ctx context.Context, email string) (Account, error) {
	row := q.db.QueryRow(ctx, getAccountByEmail, email)
	var i Account
	err := row.Scan(&i.ID, &i.Email)
	return i, err
}

const getAccountByID = `-- name: GetAccountByID :one
SELECT id, email FROM accounts WHERE id = $1
`

func (q *Queries) GetAccountByID(ctx context.Context, id int32) (Account, error) {
	row := q.db.QueryRow(ctx, getAccountByID, id)
	var i Account
	err := row.Scan(&i.ID, &i.Email)
	return i, err
}
